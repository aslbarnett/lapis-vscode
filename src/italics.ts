export const italicScopeList = [
	'markup.changed',
	'meta.diff.header.git',
	'meta.diff.header.from-file',
	'meta.diff.header.to-file',
	'markup.deleted.diff',
	'markup.inserted.diff',
	'punctuation.accessor',
	'keyword',
	'storage',
	'meta.var.expr',
	'meta.class meta.method.declaration meta.var.expr storage.type.js',
	'storage.type.property.js',
	'storage.type.property.ts',
	'storage.type.property.tsx',
	'entity.name.function',
	'entity.other.attribute-name',
	'keyword.operator.relational',
	'meta.delimiter.period',
	'meta.selector',
	'entity.name.tag.doctype',
	'meta.tag.sgml.doctype',
	'variable.other.object.property',
	'entity.name.function',
	'keyword.operator.comparison',
	'keyword.control.flow.js',
	'keyword.control.flow.ts',
	'keyword.control.flow.tsx',
	'keyword.control.ruby',
	'keyword.control.module.ruby',
	'keyword.control.class.ruby',
	'keyword.control.def.ruby',
	'keyword.control.loop.js',
	'keyword.control.loop.ts',
	'keyword.control.import.js',
	'keyword.control.import.ts',
	'keyword.control.import.tsx',
	'keyword.control.from.js',
	'keyword.control.from.ts',
	'keyword.control.from.tsx',
	'keyword.operator.instanceof.js',
	'keyword.operator.expression.instanceof.ts',
	'keyword.operator.expression.instanceof.tsx',
	'italic',
	'quote',
	'source.elixir .punctuation.binary.elixir',
	'source.go keyword.package.go',
	'source.go keyword.import.go',
	'source.go keyword.function.go',
	'source.go keyword.type.go',
	'source.go keyword.struct.go',
	'source.go keyword.interface.go',
	'source.go keyword.const.go',
	'source.go keyword.var.go',
	'source.go keyword.map.go',
	'source.go keyword.channel.go',
	'source.go keyword.control.go',
	'meta.tag.sgml.doctype.html',
	'variable.other.object.js',
	'markup.italic.markdown',
	'markup.quote.markdown',
	'keyword.control',
];

export const noItalicScopeList = [
	'meta.class.ts meta.var.expr.ts storage.type.ts',
	'meta.class.tsx meta.var.expr.tsx storage.type.tsx',
	'meta.property-list.css meta.property-value.css variable.other.less',
	'meta.property-list.scss variable.scss',
	'meta.property-list.sass variable.sass',
	'meta.brace',
	'keyword.operator.operator',
	'keyword.operator.or.regexp',
	'keyword.operator.expression.in',
	'keyword.operator.relational',
	'keyword.operator.assignment',
	'keyword.operator.comparison',
	'keyword.operator.type',
	'keyword.operator',
	'keyword',
	'punctuation.definintion.string',
	'punctuation',
	'variable.other.readwrite.js',
	'storage.type',
	'source.css',
	'string.quoted',
	'constant.numeric',
	'constant.character.numeric',
	'storage.type.function.arrow.js',
	'entity.name.tag',
	'meta.tag.other.html',
	'meta.tag.other.js',
	'meta.tag.other.tsx',
	'entity.name.tag.tsx',
	'entity.name.tag.js',
	'entity.name.tag',
	'meta.tag.js',
	'meta.tag.tsx',
	'meta.tag.html',
	'keyword.operator',
	'variable.parameter.function',
	'support.type.vendor.property-name',
	'support.constant.vendor.property-value',
	'support.type.property-name',
	'meta.property-list entity.name.tag',
	'keyword.operator.logical',
	'variable.other.object.js',
	'keyword.control.conditional.js',
	'keyword.control.conditional.ts',
	'keyword.control.switch.js',
	'keyword.control.switch.ts',
	'entity.name.tag.css',
	'entity.name.tag.less',
	'entity.name.tag.custom.css',
	'support.constant.property-value.css',
	'entity.name.type.js',
	'entity.name.type.module.js',
	'support.class.component.js',
	'support.class.component.tsx',
];
